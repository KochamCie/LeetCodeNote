package com.hama.leetcode;
/**
Reverse bits of a given 32 bits unsigned integer.

&nbsp;

Example 1:


Input: 00000010100101000001111010011100
Output: 00111001011110000010100101000000
Explanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.


Example 2:


Input: 11111111111111111111111111111101
Output: 10111111111111111111111111111111
Explanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10101111110010110010011101101001.

&nbsp;

Note:


	Note that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as signed integer type and should not affect your implementation, as the internal binary representation of the integer is the same whether it is signed or unsigned.
	In Java,&nbsp;the compiler represents the signed integers using 2&#39;s complement notation. Therefore, in Example 2&nbsp;above the input represents the signed integer -3&nbsp;and the output represents the signed integer -1073741825.


&nbsp;

Follow up:

If this function is called many times, how would you optimize it?
**/
_190_Reverse_Bitsp_190_Reverse_Bitsu_190_Reverse_Bitsb_190_Reverse_Bitsl_190_Reverse_Bitsi_190_Reverse_Bitsc_190_Reverse_Bits _190_Reverse_Bitsc_190_Reverse_Bitsl_190_Reverse_Bitsa_190_Reverse_Bitss_190_Reverse_Bitss_190_Reverse_Bits _190_Reverse_Bits__190_Reverse_Bits1_190_Reverse_Bits9_190_Reverse_Bits0_190_Reverse_Bits__190_Reverse_BitsR_190_Reverse_Bitse_190_Reverse_Bitsv_190_Reverse_Bitse_190_Reverse_Bitsr_190_Reverse_Bitss_190_Reverse_Bitse_190_Reverse_Bits__190_Reverse_BitsB_190_Reverse_Bitsi_190_Reverse_Bitst_190_Reverse_Bitss_190_Reverse_Bits _190_Reverse_Bits{_190_Reverse_Bits_190_Reverse_Bits
_190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits/_190_Reverse_Bits/_190_Reverse_Bits _190_Reverse_Bitsy_190_Reverse_Bitso_190_Reverse_Bitsu_190_Reverse_Bits _190_Reverse_Bitsn_190_Reverse_Bitse_190_Reverse_Bitse_190_Reverse_Bitsd_190_Reverse_Bits _190_Reverse_Bitst_190_Reverse_Bitsr_190_Reverse_Bitse_190_Reverse_Bitsa_190_Reverse_Bitst_190_Reverse_Bits _190_Reverse_Bitsn_190_Reverse_Bits _190_Reverse_Bitsa_190_Reverse_Bitss_190_Reverse_Bits _190_Reverse_Bitsa_190_Reverse_Bitsn_190_Reverse_Bits _190_Reverse_Bitsu_190_Reverse_Bitsn_190_Reverse_Bitss_190_Reverse_Bitsi_190_Reverse_Bitsg_190_Reverse_Bitsn_190_Reverse_Bitse_190_Reverse_Bitsd_190_Reverse_Bits _190_Reverse_Bitsv_190_Reverse_Bitsa_190_Reverse_Bitsl_190_Reverse_Bitsu_190_Reverse_Bitse_190_Reverse_Bits_190_Reverse_Bits
_190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bitsp_190_Reverse_Bitsu_190_Reverse_Bitsb_190_Reverse_Bitsl_190_Reverse_Bitsi_190_Reverse_Bitsc_190_Reverse_Bits _190_Reverse_Bitsi_190_Reverse_Bitsn_190_Reverse_Bitst_190_Reverse_Bits _190_Reverse_Bitsr_190_Reverse_Bitse_190_Reverse_Bitsv_190_Reverse_Bitse_190_Reverse_Bitsr_190_Reverse_Bitss_190_Reverse_Bitse_190_Reverse_BitsB_190_Reverse_Bitsi_190_Reverse_Bitst_190_Reverse_Bitss_190_Reverse_Bits(_190_Reverse_Bitsi_190_Reverse_Bitsn_190_Reverse_Bitst_190_Reverse_Bits _190_Reverse_Bitsn_190_Reverse_Bits)_190_Reverse_Bits _190_Reverse_Bits{_190_Reverse_Bits_190_Reverse_Bits
_190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits_190_Reverse_Bits
_190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits _190_Reverse_Bits}_190_Reverse_Bits_190_Reverse_Bits
_190_Reverse_Bits}_190_Reverse_Bits