package com.hama.leetcode;
/**
Given the head of a&nbsp;graph, return a deep copy (clone) of the graph. Each node in the graph contains a label&nbsp;(int) and a list (List[UndirectedGraphNode]) of its neighbors. There is an edge between the given node and each of the nodes in its neighbors.


OJ&#39;s undirected graph serialization (so you can understand error output):

Nodes are labeled uniquely.
We use # as a separator for each node, and , as a separator for node label and each neighbor of the node.

&nbsp;

As an example, consider the serialized graph {0,1,2#1,2#2,2}.

The graph has a total of three nodes, and therefore contains three parts as separated by #.


	First node is labeled as 0. Connect node 0 to both nodes 1 and 2.
	Second node is labeled as 1. Connect node 1 to node 2.
	Third node is labeled as 2. Connect node 2 to node 2 (itself), thus forming a self-cycle.


&nbsp;

Visually, the graph looks like the following:


       1
      / \
     /   \
    0 --- 2
         / \
         \_/


Note: The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don&#39;t need to understand the serialization to solve the problem.

**/
_133_Clone_Graph/_133_Clone_Graph*_133_Clone_Graph*_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph _133_Clone_GraphD_133_Clone_Graphe_133_Clone_Graphf_133_Clone_Graphi_133_Clone_Graphn_133_Clone_Graphi_133_Clone_Grapht_133_Clone_Graphi_133_Clone_Grapho_133_Clone_Graphn_133_Clone_Graph _133_Clone_Graphf_133_Clone_Grapho_133_Clone_Graphr_133_Clone_Graph _133_Clone_Graphu_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_Graph _133_Clone_Graphg_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_Graph._133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph _133_Clone_Graphc_133_Clone_Graphl_133_Clone_Grapha_133_Clone_Graphs_133_Clone_Graphs_133_Clone_Graph _133_Clone_GraphU_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_GraphN_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph _133_Clone_Graph{_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graphi_133_Clone_Graphn_133_Clone_Grapht_133_Clone_Graph _133_Clone_Graphl_133_Clone_Grapha_133_Clone_Graphb_133_Clone_Graphe_133_Clone_Graphl_133_Clone_Graph;_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_GraphL_133_Clone_Graphi_133_Clone_Graphs_133_Clone_Grapht_133_Clone_Graph<_133_Clone_GraphU_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_GraphN_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph>_133_Clone_Graph _133_Clone_Graphn_133_Clone_Graphe_133_Clone_Graphi_133_Clone_Graphg_133_Clone_Graphh_133_Clone_Graphb_133_Clone_Grapho_133_Clone_Graphr_133_Clone_Graphs_133_Clone_Graph;_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_GraphU_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_GraphN_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph(_133_Clone_Graphi_133_Clone_Graphn_133_Clone_Grapht_133_Clone_Graph _133_Clone_Graphx_133_Clone_Graph)_133_Clone_Graph _133_Clone_Graph{_133_Clone_Graph _133_Clone_Graphl_133_Clone_Grapha_133_Clone_Graphb_133_Clone_Graphe_133_Clone_Graphl_133_Clone_Graph _133_Clone_Graph=_133_Clone_Graph _133_Clone_Graphx_133_Clone_Graph;_133_Clone_Graph _133_Clone_Graphn_133_Clone_Graphe_133_Clone_Graphi_133_Clone_Graphg_133_Clone_Graphh_133_Clone_Graphb_133_Clone_Grapho_133_Clone_Graphr_133_Clone_Graphs_133_Clone_Graph _133_Clone_Graph=_133_Clone_Graph _133_Clone_Graphn_133_Clone_Graphe_133_Clone_Graphw_133_Clone_Graph _133_Clone_GraphA_133_Clone_Graphr_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphy_133_Clone_GraphL_133_Clone_Graphi_133_Clone_Graphs_133_Clone_Grapht_133_Clone_Graph<_133_Clone_GraphU_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_GraphN_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph>_133_Clone_Graph(_133_Clone_Graph)_133_Clone_Graph;_133_Clone_Graph _133_Clone_Graph}_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph _133_Clone_Graph}_133_Clone_Graph;_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph*_133_Clone_Graph/_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graphp_133_Clone_Graphu_133_Clone_Graphb_133_Clone_Graphl_133_Clone_Graphi_133_Clone_Graphc_133_Clone_Graph _133_Clone_Graphc_133_Clone_Graphl_133_Clone_Grapha_133_Clone_Graphs_133_Clone_Graphs_133_Clone_Graph _133_Clone_Graph__133_Clone_Graph1_133_Clone_Graph3_133_Clone_Graph3_133_Clone_Graph__133_Clone_GraphC_133_Clone_Graphl_133_Clone_Grapho_133_Clone_Graphn_133_Clone_Graphe_133_Clone_Graph__133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_Graph _133_Clone_Graph{_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graphp_133_Clone_Graphu_133_Clone_Graphb_133_Clone_Graphl_133_Clone_Graphi_133_Clone_Graphc_133_Clone_Graph _133_Clone_GraphU_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_GraphN_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph _133_Clone_Graphc_133_Clone_Graphl_133_Clone_Grapho_133_Clone_Graphn_133_Clone_Graphe_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_Graph(_133_Clone_GraphU_133_Clone_Graphn_133_Clone_Graphd_133_Clone_Graphi_133_Clone_Graphr_133_Clone_Graphe_133_Clone_Graphc_133_Clone_Grapht_133_Clone_Graphe_133_Clone_Graphd_133_Clone_GraphG_133_Clone_Graphr_133_Clone_Grapha_133_Clone_Graphp_133_Clone_Graphh_133_Clone_GraphN_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph _133_Clone_Graphn_133_Clone_Grapho_133_Clone_Graphd_133_Clone_Graphe_133_Clone_Graph)_133_Clone_Graph _133_Clone_Graph{_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph _133_Clone_Graph}_133_Clone_Graph_133_Clone_Graph
_133_Clone_Graph}_133_Clone_Graph