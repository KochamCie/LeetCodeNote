package com.hama.leetcode;
/**
Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).


For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

    1
   / \
  2   2
 / \ / \
3  4 4  3



But the following [1,2,2,null,3,null,3]  is not:

    1
   / \
  2   2
   \   \
   3    3




Note:
Bonus points if you could solve it both recursively and iteratively.
**/
_101_Symmetric_Tree/_101_Symmetric_Tree*_101_Symmetric_Tree*_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_TreeD_101_Symmetric_Treee_101_Symmetric_Treef_101_Symmetric_Treei_101_Symmetric_Treen_101_Symmetric_Treei_101_Symmetric_Treet_101_Symmetric_Treei_101_Symmetric_Treeo_101_Symmetric_Treen_101_Symmetric_Tree _101_Symmetric_Treef_101_Symmetric_Treeo_101_Symmetric_Treer_101_Symmetric_Tree _101_Symmetric_Treea_101_Symmetric_Tree _101_Symmetric_Treeb_101_Symmetric_Treei_101_Symmetric_Treen_101_Symmetric_Treea_101_Symmetric_Treer_101_Symmetric_Treey_101_Symmetric_Tree _101_Symmetric_Treet_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_Tree _101_Symmetric_Treen_101_Symmetric_Treeo_101_Symmetric_Treed_101_Symmetric_Treee_101_Symmetric_Tree._101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_Treep_101_Symmetric_Treeu_101_Symmetric_Treeb_101_Symmetric_Treel_101_Symmetric_Treei_101_Symmetric_Treec_101_Symmetric_Tree _101_Symmetric_Treec_101_Symmetric_Treel_101_Symmetric_Treea_101_Symmetric_Trees_101_Symmetric_Trees_101_Symmetric_Tree _101_Symmetric_TreeT_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_TreeN_101_Symmetric_Treeo_101_Symmetric_Treed_101_Symmetric_Treee_101_Symmetric_Tree _101_Symmetric_Tree{_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Treei_101_Symmetric_Treen_101_Symmetric_Treet_101_Symmetric_Tree _101_Symmetric_Treev_101_Symmetric_Treea_101_Symmetric_Treel_101_Symmetric_Tree;_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_TreeT_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_TreeN_101_Symmetric_Treeo_101_Symmetric_Treed_101_Symmetric_Treee_101_Symmetric_Tree _101_Symmetric_Treel_101_Symmetric_Treee_101_Symmetric_Treef_101_Symmetric_Treet_101_Symmetric_Tree;_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_TreeT_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_TreeN_101_Symmetric_Treeo_101_Symmetric_Treed_101_Symmetric_Treee_101_Symmetric_Tree _101_Symmetric_Treer_101_Symmetric_Treei_101_Symmetric_Treeg_101_Symmetric_Treeh_101_Symmetric_Treet_101_Symmetric_Tree;_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_TreeT_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_TreeN_101_Symmetric_Treeo_101_Symmetric_Treed_101_Symmetric_Treee_101_Symmetric_Tree(_101_Symmetric_Treei_101_Symmetric_Treen_101_Symmetric_Treet_101_Symmetric_Tree _101_Symmetric_Treex_101_Symmetric_Tree)_101_Symmetric_Tree _101_Symmetric_Tree{_101_Symmetric_Tree _101_Symmetric_Treev_101_Symmetric_Treea_101_Symmetric_Treel_101_Symmetric_Tree _101_Symmetric_Tree=_101_Symmetric_Tree _101_Symmetric_Treex_101_Symmetric_Tree;_101_Symmetric_Tree _101_Symmetric_Tree}_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree _101_Symmetric_Tree}_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree*_101_Symmetric_Tree/_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Treec_101_Symmetric_Treel_101_Symmetric_Treea_101_Symmetric_Trees_101_Symmetric_Trees_101_Symmetric_Tree _101_Symmetric_Tree__101_Symmetric_Tree1_101_Symmetric_Tree0_101_Symmetric_Tree1_101_Symmetric_Tree__101_Symmetric_TreeS_101_Symmetric_Treey_101_Symmetric_Treem_101_Symmetric_Treem_101_Symmetric_Treee_101_Symmetric_Treet_101_Symmetric_Treer_101_Symmetric_Treei_101_Symmetric_Treec_101_Symmetric_Tree__101_Symmetric_TreeT_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_Tree _101_Symmetric_Tree{_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Treep_101_Symmetric_Treeu_101_Symmetric_Treeb_101_Symmetric_Treel_101_Symmetric_Treei_101_Symmetric_Treec_101_Symmetric_Tree _101_Symmetric_Treeb_101_Symmetric_Treeo_101_Symmetric_Treeo_101_Symmetric_Treel_101_Symmetric_Treee_101_Symmetric_Treea_101_Symmetric_Treen_101_Symmetric_Tree _101_Symmetric_Treei_101_Symmetric_Trees_101_Symmetric_TreeS_101_Symmetric_Treey_101_Symmetric_Treem_101_Symmetric_Treem_101_Symmetric_Treee_101_Symmetric_Treet_101_Symmetric_Treer_101_Symmetric_Treei_101_Symmetric_Treec_101_Symmetric_Tree(_101_Symmetric_TreeT_101_Symmetric_Treer_101_Symmetric_Treee_101_Symmetric_Treee_101_Symmetric_TreeN_101_Symmetric_Treeo_101_Symmetric_Treed_101_Symmetric_Treee_101_Symmetric_Tree _101_Symmetric_Treer_101_Symmetric_Treeo_101_Symmetric_Treeo_101_Symmetric_Treet_101_Symmetric_Tree)_101_Symmetric_Tree _101_Symmetric_Tree{_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree _101_Symmetric_Tree}_101_Symmetric_Tree_101_Symmetric_Tree
_101_Symmetric_Tree}_101_Symmetric_Tree